name: Release on TAG push
on:
  push:
    tags:
      - '*'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: pip install git-changelog
      - name: Get latest tag
        id: get_tag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Read CHANGELOG until second ##
        id: changelog
        run: |
          awk '/^## /{count++} {if (count==2) {exit} print}' CHANGELOG.MD > changelog_excerpt.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: changelog_excerpt.txt
          draft: false
          prerelease: false

  docker:
    needs: release  # Run this job only if 'test' job succeeds
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    environment: deploy  # Specify the environment name
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU for multiarch
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest tag
        id: get_tag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aws-client-monitor:${{ env.TAG }}

