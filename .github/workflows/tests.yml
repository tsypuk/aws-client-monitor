name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1' # Specify the Go version here

      # Step 3: Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install Go dependencies
      - name: Install dependencies
        run: go mod tidy

      # Step 5: Run Go tests
      - name: Run tests
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    needs: test  # Run this job only if 'test' job succeeds

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1' # Specify the Go version here

      # Step 3: Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install golangci-lint
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      # Step 5: Run golangci-lint
      - name: Run golangci-lint
        run: golangci-lint run

  docker:
    needs: lint  # Run this job only if 'test' job succeeds
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    environment: deploy  # Specify the environment name
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU for multiarch
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest tag
        id: get_tag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aws-client-monitor:latest
